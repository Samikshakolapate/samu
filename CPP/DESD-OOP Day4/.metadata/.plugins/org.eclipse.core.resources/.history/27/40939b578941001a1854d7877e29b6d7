//============================================================================
// Name        : day4_6.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;
//here Shape is abstract class declaration
//because we are unaware of the actual definition of area() inside Shape
class Shape {
	protected:
      int width;
      int height;
	public:
      virtual int Area() = 0; // Pure virtual function is declared
      // setter function
      void setWidth(int w) {
         width = w;
      }
      //setter function
      void setHeight(int h) {
         height = h;
      }
};

// A rectangle is a shape; its inherited from Shape class
class Rectangle: public Shape {
   public:
      // The implementation for Area is specific to a rectangle class
      int Area() {
         return (width * height);
      }
};
// A triangle is a shape too; it inherits shape.
class Triangle: public Shape {
   public:
      // Triangle uses the same Area function but implements it to
      // return the area of a triangle.
      int Area() {
         return (width * height)/2;
      }
};

int main() {
  Rectangle R;
  Triangle T;

  R.setWidth(5);
  R.setHeight(10);

  T.setWidth(20);
  T.setHeight(8);

  cout << "The area of the rectangle is: " << R.Area() << endl;
  cout << "The area of the triangle is: " << T.Area() << endl;
}


